#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MTDBTEST")]
	public partial class ClientMovieDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertScreeningRoomInfo(ScreeningRoomInfo instance);
    partial void UpdateScreeningRoomInfo(ScreeningRoomInfo instance);
    partial void DeleteScreeningRoomInfo(ScreeningRoomInfo instance);
    partial void InsertShowTimeInfo(ShowTimeInfo instance);
    partial void UpdateShowTimeInfo(ShowTimeInfo instance);
    partial void DeleteShowTimeInfo(ShowTimeInfo instance);
    partial void InsertMovy(Movy instance);
    partial void UpdateMovy(Movy instance);
    partial void DeleteMovy(Movy instance);
    #endregion
		
		public ClientMovieDataDataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.MTDBTESTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClientMovieDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientMovieDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientMovieDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientMovieDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ScreeningRoomInfo> ScreeningRoomInfos
		{
			get
			{
				return this.GetTable<ScreeningRoomInfo>();
			}
		}
		
		public System.Data.Linq.Table<ShowTimeInfo> ShowTimeInfos
		{
			get
			{
				return this.GetTable<ShowTimeInfo>();
			}
		}
		
		public System.Data.Linq.Table<Movy> Movies
		{
			get
			{
				return this.GetTable<Movy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScreeningRoomInfo")]
	public partial class ScreeningRoomInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScreeningRoomID;
		
		private int _MovieID;
		
		private int _ScreeningRoomNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScreeningRoomIDChanging(int value);
    partial void OnScreeningRoomIDChanged();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnScreeningRoomNumberChanging(int value);
    partial void OnScreeningRoomNumberChanged();
    #endregion
		
		public ScreeningRoomInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningRoomID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScreeningRoomID
		{
			get
			{
				return this._ScreeningRoomID;
			}
			set
			{
				if ((this._ScreeningRoomID != value))
				{
					this.OnScreeningRoomIDChanging(value);
					this.SendPropertyChanging();
					this._ScreeningRoomID = value;
					this.SendPropertyChanged("ScreeningRoomID");
					this.OnScreeningRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningRoomNumber", DbType="Int NOT NULL")]
		public int ScreeningRoomNumber
		{
			get
			{
				return this._ScreeningRoomNumber;
			}
			set
			{
				if ((this._ScreeningRoomNumber != value))
				{
					this.OnScreeningRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._ScreeningRoomNumber = value;
					this.SendPropertyChanged("ScreeningRoomNumber");
					this.OnScreeningRoomNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShowTimeInfo")]
	public partial class ShowTimeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShowTimeID;
		
		private int _MovieID;
		
		private int _ScreeningRoomID;
		
		private System.Nullable<System.DateTime> _ActualShowTimeDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShowTimeIDChanging(int value);
    partial void OnShowTimeIDChanged();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnScreeningRoomIDChanging(int value);
    partial void OnScreeningRoomIDChanged();
    partial void OnActualShowTimeDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualShowTimeDateTimeChanged();
    #endregion
		
		public ShowTimeInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTimeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ShowTimeID
		{
			get
			{
				return this._ShowTimeID;
			}
			set
			{
				if ((this._ShowTimeID != value))
				{
					this.OnShowTimeIDChanging(value);
					this.SendPropertyChanging();
					this._ShowTimeID = value;
					this.SendPropertyChanged("ShowTimeID");
					this.OnShowTimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningRoomID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScreeningRoomID
		{
			get
			{
				return this._ScreeningRoomID;
			}
			set
			{
				if ((this._ScreeningRoomID != value))
				{
					this.OnScreeningRoomIDChanging(value);
					this.SendPropertyChanging();
					this._ScreeningRoomID = value;
					this.SendPropertyChanged("ScreeningRoomID");
					this.OnScreeningRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualShowTimeDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualShowTimeDateTime
		{
			get
			{
				return this._ActualShowTimeDateTime;
			}
			set
			{
				if ((this._ActualShowTimeDateTime != value))
				{
					this.OnActualShowTimeDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualShowTimeDateTime = value;
					this.SendPropertyChanged("ActualShowTimeDateTime");
					this.OnActualShowTimeDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movies")]
	public partial class Movy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MovieName;
		
		private int _MovieID;
		
		private string _Genre;
		
		private System.DateTime _ReleaseDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieNameChanging(string value);
    partial void OnMovieNameChanged();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnGenreChanging(string value);
    partial void OnGenreChanged();
    partial void OnReleaseDateChanging(System.DateTime value);
    partial void OnReleaseDateChanged();
    #endregion
		
		public Movy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MovieName
		{
			get
			{
				return this._MovieName;
			}
			set
			{
				if ((this._MovieName != value))
				{
					this.OnMovieNameChanging(value);
					this.SendPropertyChanging();
					this._MovieName = value;
					this.SendPropertyChanged("MovieName");
					this.OnMovieNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="NVarChar(50)")]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this.OnGenreChanging(value);
					this.SendPropertyChanging();
					this._Genre = value;
					this.SendPropertyChanged("Genre");
					this.OnGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
